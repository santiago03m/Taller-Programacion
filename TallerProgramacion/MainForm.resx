<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStripMain.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="empresaViajesToolStripMenuItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>